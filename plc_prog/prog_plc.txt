NOP 0000

// setup
LDI 0000
IOW O_MAX
IOW O_MOTOR
ST  R_START
ST  R_LAST_START
LDI 0003
ST  R_COUNTER
// 0x1388 = 5000 [ms]
LDI 0005
ST  R_DELAY
JMP AD_ROUTINE
RST 0000

// routine
CLL AD_RESET #AD_ROUTINE
CLL AD_SET
LD  R_RESET
NOT 0000
AND R_ED_SET
// if (s & ~r) start timer
JMA AD_TIMER
JMP AD_ROUTINE

// reset = (stop | ~counter | comp)
CLL AD_COMP #AD_RESET
IOR I_STOP
OR  R_PCOMP
ST  R_RESET
LD  R_COUNTER
NOT 0000
OR  R_RESET
ST  R_RESET
JMA AD_RMOTOR
RET 0000
LDI 0000 #AD_RMOTOR
IOW O_MOTOR
RET 0000

// set (edge detector)
IOR I_START #AD_SET
ST  R_START
NOP 0000
// z jakiegoÅ› powodu bez NOP nagle R_LAST_START = R_START
XOR R_LAST_START
AND R_START
ST  R_ED_SET
LD  R_START
ST  R_LAST_START
RET 0000

// comparator
IOR I_PRESSURE #AD_COMP
ST  R_PRESSURE
// 75% x FFFF = BFFD
LDI BFFD
CMP R_PRESSURE
// 75% >= PR = 1
NOT 0000
ST  R_PCOMP
RET 0000

// timer
LD  R_DELAY #AD_TIMER
ST  R_TIMER
// timer dec
CLL AD_RESET #AD_TD
LD  R_RESET
// go to routine if r=1
JMA AD_ROUTINE
LD  R_TIMER
DEC 0000
JMA AD_TD
JMP AD_SMOTOR

// start motor
LDI 0001 #AD_SMOTOR
IOW O_MOTOR
CLL AD_CD
RET AD_ROUTINE

// motor start counter dec
LDI R_COUNTER #AD_CD
DEC 0000
ST  R_COUNTER
JMA AD_CR
LDI 0001
IOW O_MAX
RET 0000 #AD_CR